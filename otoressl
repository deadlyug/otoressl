#!/bin/bash
# Change directory to directory of the script
cd "$(dirname "$0")"

OS=$(hostnamectl | grep "Operating System" | awk '{print $3}')
certbot=$(which certbot)
if [[ $certbot == "" ]]; then
  echo "---------------------------------------------------------------------------------------------------"
  echo "certbot not installed, make sure you have configured ssl using certbot before you using this tool.."
  echo "certbot belum terinstall, pastikan anda sudah pernah mengkonfigurasi/menginstall ssl menggunakan certbot sebelum menggunakan tool ini.."
  echo "exiting.."
  exit 1
fi
validDay=$(certbot certificates | grep Expiry | awk 'FNR==1 {print $6}')

option1=$1
firewall=$2
function startFirewall() {

case $OS in
  "CentOS")
    if [[ $option1 == "--disable-firewall" ]]; then
      case $firewall in
        "iptables")
          echo "-------------------------------"
          echo "mengaktifkan kembali firewall.."
          if systemctl start iptables; then
            echo "berhasil mengaktifkan firewall.."
          fi
          ;;
        "firewalld")
          echo "-------------------------------"
          echo "mengaktifkan kembali firewall.."
          if systemctl start firewalld; then
            echo "berhasil mengaktifkan firewall.."
          fi
          ;;
      esac
    fi
    ;;
  *)
    if [[ $option1 == "--disable-firewall" ]]; then
      case $firewall in
        "iptables")
          if [[ ! -d /etc/sysconfig ]]; then
            mkdir /etc/sysconfig
          fi
          echo "--------------------------"
          echo "mengaktifkan firewall.."
          if iptables-restore < /etc/sysconfig/iptables; then
            echo "berhasil mengaktifkan firewall.."
          fi
          ;;
        "firewalld")
          echo "--------------------------"
          echo "mengaktifkan firewall.."
          if systemctl start firewalld; then
            echo "berhasil mengaktifkan firewall.."
          fi
          ;;
      esac
    fi
    ;;
esac

}

case $OS in
  "CentOS")
    if [[ $1 == "--disable-firewall" ]]; then
      case $2 in
        "iptables")
          echo "--------------------------"
          echo "menon-aktifkan firewall.."
          if systemctl stop iptables; then
            echo "berhasil menon-aktifkan firewall.."
          fi
          ;;
        "firewalld")
          echo "--------------------------"
          echo "menon-aktifkan firewall.."
          if systemctl stop firewalld; then
            echo "berhasil menon-aktifkan firewall.."
          fi
          ;;
      esac
    fi
    ;;
  *)
    if [[ $1 == "--disable-firewall" ]]; then
      case $2 in
        "iptables")
          if [[ ! -d /etc/sysconfig ]]; then
            mkdir /etc/sysconfig
          fi
          echo "--------------------------"
          echo "menon-aktifkan firewall.."
          if iptables-save > /etc/sysconfig/iptables; then
            if iptables -F; then
              echo "berhasil menon-aktifkan firewall.."
            fi
          fi
          ;;
        "firewalld")
          echo "--------------------------"
          echo "menon-aktifkan firewall.."
          if systemctl stop firewalld; then
            echo "berhasil menon-aktifkan firewall.."
          fi
          ;;
      esac
    fi
    ;;
esac

echo "----------------------------------------"
echo "Mengecek tanggal expire sertifikat ssl.."
source ./config

if [[ $validDay < 30 ]] || echo $validDay | grep EXPIRED; then

  if [[ -f ./send-notify ]]; then
    ./send-notify "Renewing certificate.."
  fi

  if [[ $TOKEN_BOT_TELEGRAM && $ID_BOT_TELEGRAM != "" ]]; then
      curl -s -X POST https://api.telegram.org/bot${TOKEN_BOT_TELEGRAM}/sendMessage -d chat_id=${ID_BOT_TELEGRAM} -d text="NOTIF SSL @$(cat /etc/hostname)

Renewing certificate..
" &>/dev/null &
  fi

  echo "Renewing certificate.."

  if $(which certbot) renew; then
    if [[ -f ./send-notify ]]; then
        ./send-notify "Success! certificate renewed..
menghitung hari untuk dibuatkan cronjob/automatic renew certificate...
"
    fi
    if [[ $TOKEN_BOT_TELEGRAM && $ID_BOT_TELEGRAM != "" ]]; then
       curl -s -X POST https://api.telegram.org/bot${TOKEN_BOT_TELEGRAM}/sendMessage -d chat_id=${ID_BOT_TELEGRAM} -d text="NOTIF SSL $(cat /etc/hostname)

Success! certificate renewed..
menghitung hari untuk dibuatkan cronjob/automatic renew certificate...
" &>/dev/null &
    fi

    echo "-----------------------------"
    echo "Success! certificate renewed..
menghitung hari untuk dibuatkan cronjob/automatic renew certificate...
"
  fi
else
  echo "--------------------------------------------------------"
  echo "belum memasuki waktu yang pas untuk renew certificate..."
  echo "menghitung hari untuk dibuatkan cronjob/automatic renew certificate..."
fi

isCrontab=$(which crontab)

if [[ $isCrontab == "" ]]; then
  
  case $OS in
    "Arch")
      if sudo pacman -Syyy cronie; then
        if ! systemctl enable --now cronie; then
          echo "---------------------------------"
          echo "cronjob service failed to start.."
          echo "exiting.."
        if [[ $1 == "--disable-firewall" ]]; then
          startFirewall
        fi
          exit 1
        fi
      else
        echo "--------------------------------------------------------------------------------------------"
        echo "Cannot install cronjob package, please install manual cronjob package and rerun this scripts"
        echo "exiting.."
      if [[ $1 == "--disable-firewall" ]]; then
        startFirewall
      fi
        exit 1
      fi
      ;;
    "Ubuntu")
      if apt-get update && apt-get install cron; then
        if ! systemctl enable --now cron; then
          echo "---------------------------------"
          echo "cronjob service failed to start.."
          echo "exiting.."
        if [[ $1 == "--disable-firewall" ]]; then
          startFirewall
        fi
          exit 1
        fi
      else
        echo "--------------------------------------------------------------------------------------------"
        echo "Cannot install cronjob package, please install manual cronjob package and rerun this scripts"
        echo "exiting.."
      if [[ $1 == "--disable-firewall" ]]; then
        startFirewall
      fi
        exit 1
      fi
      ;;
    "CentOS")
      if yum update && yum install crond; then
        if ! systemctl enable --now crond; then
          echo "---------------------------------"
          echo "cronjob service failed to start.."
          echo "exiting.."
        if [[ $1 == "--disable-firewall" ]]; then
          startFirewall
        fi
          exit 1
        fi
      else
        echo "--------------------------------------------------------------------------------------------"
        echo "Cannot install cronjob package, please install manual cronjob package and rerun this scripts"
        echo "exiting.."
      if [[ $1 == "--disable-firewall" ]]; then
        startFirewall
      fi
        exit 1
      fi
      ;;
  esac
else
  case $OS in
    "Arch")
      if ! systemctl enable --now cronie; then
        echo "---------------------------------"
        echo "cronjob service failed to start.."
        echo "exiting.."
      if [[ $1 == "--disable-firewall" ]]; then
        startFirewall
      fi
        exit 1
      fi
      ;;
    "Ubuntu")
      if ! systemctl enable --now cron; then
        echo "---------------------------------"
        echo "cronjob service failed to start.."
        echo "exiting.."
      if [[ $1 == "--disable-firewall" ]]; then
        startFirewall
      fi
        exit 1
      fi
      ;;
    "CentOS")
      if ! systemctl enable --now crond; then
        echo "---------------------------------"
        echo "cronjob service failed to start.."
        echo "exiting.."
      if [[ $1 == "--disable-firewall" ]]; then
        startFirewall
      fi
        exit 1
      fi
      ;;
  esac
fi

crontab -l | sed 's/.*otoressl.*//' | crontab -
crontab -l | sed '/^$/d'| crontab -

renewDay="$(($validDay - 10))"

month=$(date --date="+$renewDay days" +%-m)
day=$(date --date="+$renewDay days" +%-d)

if [[ $1 == "--disable-firewall" ]]; then
  case $2 in
    "iptables")
      { crontab -l; echo "0 9 $day $month * $(which bash) $(pwd)/otoressl --disable-firewall iptables"; } | crontab -
      ;;
    "firewalld")
      { crontab -l; echo "0 9 $day $month * $(which bash) $(pwd)/otoressl --disable-firewall firewalld"; } | crontab -
      ;;
  esac
else
  { crontab -l; echo "0 9 $day $month * $(which bash) $(pwd)/otoressl"; } | crontab -
fi

if [[ -f ./send-notify ]]; then
   ./send-notify "berhasil membuat cronjob untuk otomisasi renew certificate.."
fi
if [[ $TOKEN_BOT_TELEGRAM && $ID_BOT_TELEGRAM != "" ]]; then
     curl -s -X POST https://api.telegram.org/bot${TOKEN_BOT_TELEGRAM}/sendMessage -d chat_id=${ID_BOT_TELEGRAM} -d text="NOTIF SSL $(cat /etc/hostname)

berhasil membuat cronjob untuk otomisasi renew certificate..
" &>/dev/null &
fi
echo "------------------------------------------------------------"
echo "berhasil membuat cronjob untuk otomisasi renew certificate.."
crontab -l
if [[ $1 == "--disable-firewall" ]]; then
  startFirewall
fi
